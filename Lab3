using System;
using System.Buffers;
using System.Collections.Concurrent;
using System.Globalization;

namespace Lab3
{
    internal class Program
    {
        static void Main(string[] args)
        {
            static double[] MinArray(double[] array)
            {
                double ArMin = array[0];
                int iMin = 0;
                for (int i = 1; i < array.Length; i++)
                {
                    if (array[i] < ArMin)
                    {
                        ArMin = array[i];
                        iMin = i;
                    }
                }
                double[] ArrayRes = { ArMin, iMin };
                return ArrayRes;
            }
            static double[] MaxArray(double[] array)
            {
                double ArMax = array[0];
                int iMax = 0;
                for (int i = 1; i < array.Length; i++)
                {
                    if (array[i] > ArMax)
                    {
                        ArMax = array[i];
                        iMax = i;
                    }
                }
                double[] ArrayRes = { ArMax, iMax };
                return ArrayRes;
            }
            static void Task1_6()
            {
                double[] Array = new double[5] { 1.4, 54, 25.3, -100, 2 };
                double s = 0;
                for (int i = 0; i < 5; i++)
                {
                    s += (Array[i] * Array[i]);
                }
                Console.WriteLine(Math.Sqrt(s));
            }
            static void Task1_10()
            {
                double[] Array = new double[10] { 1.4, 54, 25.3, -100, 2, -35.5, 505, -1, 0, 3.4564 };
                int k = 0;
                if (double.TryParse(Console.ReadLine(), out double X) & double.TryParse(Console.ReadLine(), out double Y))
                {
                    double Q = Math.Max(X, Y);
                    double P = Math.Min(X, Y);
                    for (int i = 0; i < 10; i++)
                    {
                        if (Array[i] > P & Array[i] < Q)
                        {
                            k++;
                        }
                    }
                }
                Console.WriteLine(k + "\n");
            }
            static void Task1_11()
            {
                double[] Array = new double[10] { -1,4,65,-234,-4,564,-56,456,56,23};
                List<double> list = new List<double>();
                for (int i = 0; i != 10; i++)
                    if (Array[i] > 0)
                        list.Add(Array[i]);
                                                    //Array[i] > 0 ? list.Add(Array[i]) : null;        --------what should i write instead of null?            
                foreach (double x in list)
                    Console.WriteLine(x);
            }
            static void Task1_12()
            {
                Console.WriteLine("\nAnswer for Task 1.12\n");
                double[] Array = new double[8] { 1.4, 54, 25.3, 100, 2, 35.5, 505, 1 };
                double Znach = 1;
                int iZnach = 0;
                for (int i = 0; i < 8; i++)
                {
                    if (Array[i] < 0)
                    {
                        Znach = Array[i];
                        iZnach = (i + 1);
                    }
                }
                if (Znach != 1)
                    Console.WriteLine($"{Znach} and number {iZnach}");
                else
                {
                    Console.WriteLine("No negative in array");
                }
            }
            static void Task1_13()
            {
                double[] Array = new double[10] { 1.4, 54, 25.3, -100, 2, -35.5, 505, -1, 0, 3.4564 };
                double[] Array1 = new double[5];
                double[] Array2 = new double[5];
                for (int i = 0; i < 10; i++)
                {
                    if (i % 2 == 0)
                        Array1[i % 5] = Array[i];
                    else
                        Array2[i % 5] = Array[i];
                }
                Console.WriteLine("\nAnswer for Task 1.13\n");
                for (int i = 0; i < 5; i++)
                {
                    Console.WriteLine(Array1[i]);
                }
                Console.WriteLine("\n");
                for (int i = 0; i < 5; i++)
                {
                    Console.WriteLine(Array2[i]);
                }
            }

            static void Task2_5()
            {
                double[] Array = new double[10] { 1.4, 54, 25.3, -100, 2, -35.5, 505, -1, 0, 3.4564 };
                double[] ArrayRes = new double[10];
                double ArMax = Array[0];
                double ArMin = Array[0];
                for (int i = 0; i < 10; i++)
                {
                    if (Array[i] < ArMin)
                        ArMin = Array[i];
                    if (Array[i] > ArMax)
                        ArMax = Array[i];
                }
                int j = 0;
                Console.WriteLine("\nAnswer for Task 2.5\n");
                for (int i = 0; i < 10; i++)
                {
                    if ((Array[i] < 0) & (Array[i] > ArMin) & (Array[i] < ArMax))
                    {
                        ArrayRes[j] = Array[i];
                        Console.WriteLine(ArrayRes[j]);
                        j += 1;
                    }
                }
            }
            static void Task2_6()
            {
                double[] Array1 = new double[10] { 1.4, 54, 25.3, -100, 2, -35.5, 505, -1, 0, 3.4564 };
                double sums = Array1.Sum();
                double count = Array1.Length;
                double SrZnach = sums / count;
                double MinRazn = sums;
                int iRazn = 0;
                for (int i = 0; i < 10; i++)
                {
                    if (Math.Abs(Array1[i] - SrZnach) < MinRazn)
                    {
                        MinRazn = Array1[i];
                        iRazn = i;
                    }
                }
                Array.Resize(ref Array1, Array1.Length + 1);
                int j = 0;
                Console.WriteLine(SrZnach);
                if (double.TryParse(Console.ReadLine(), out double P))
                {
                    for (int i = Array1.Length - 1; (i - 1) != iRazn; i--)
                    {
                        Array1[i] = Array1[i - 1];
                        j = i;
                    }
                    Array1[j] = P;
                }
                Console.WriteLine("\nAnswer for Task 2.6\n");
                for (int i = 0; i < Array1.Length + 1; i++)
                {
                    Console.WriteLine(Array1[i]);
                }
            }
            static void Task2_9()
            {
                double[] Array = new double[10] { 1.4, 54, 25.3, -100, 2, -35.5, 505, -1, 0, 3.4564 };
                double[] ArrayMn = MinArray(Array);
                double[] ArrayMx = MaxArray(Array);
                int k = 0;
                double s = 0;
                for (int i = 0; i < Array.Length; i++)
                {
                    if ((Array[i] < ArrayMx[0]) & (Array[i] > ArrayMn[0]))
                    {
                        s += Array[i];
                        k += 1;
                    }
                }
                Console.WriteLine("\nAnswer for Task 2.9\n");
                Console.WriteLine(s);
                Console.WriteLine(k);
                Console.WriteLine(s / k);
            }
            static void Task2_10()
            {
                double[] Array1 = new double[10] { 1.4, 54, 25.3, -100, 2, -35.5, 505, -1, 0, 3.4564 };
                int iMin = 0;
                double ArMin = MaxArray(Array1)[0];
                for (int i = 0; i < 10; i++)
                {
                    if ((Array1[i] > 0) & (Array1[i] < ArMin))
                    {
                        ArMin = Array1[i];
                        iMin = i;
                    }
                }
                if (iMin != Array1.Length - 1)
                {
                    for (int i = iMin; i < Array1.Length - 1; i++)
                    {
                        Array1[i] = Array1[i + 1];
                    }

                }
                Array.Resize(ref Array1, Array1.Length - 1);
                Console.WriteLine("\nAnswer for Task 2.10\n");
                for (int i = 0; i < Array1.Length ; i++)
                {
                    Console.WriteLine(Array1[i]);
                }
            }
            static void Task2_11()
            {
                double[] Array1 = new double[10] { 1.4, 54, 25.3, -100, 2, -35.5, 505, -1, -23, -3453.4564 };
                int iPolozh = -1;
                for (int i = 0; i < 10; i++)
                {
                    if (Array1[i] > 0)
                    {
                        iPolozh = i;
                    }
                }
                if (iPolozh == -1)
                {
                    Console.WriteLine("No positive");

                }
                else
                {
                    if (double.TryParse(Console.ReadLine(), out double P))
                    {
                        int j = 0;
                        Array.Resize(ref Array1, Array1.Length + 1);
                        for (int i = Array1.Length - 1; (i - 1) != iPolozh; i--)
                        {
                            Array1[i] = Array1[i - 1];
                            j = i;
                        }
                        Array1[(j - 1)] = P;
                        foreach (double x in Array1)
                        {
                            Console.WriteLine(x);
                        }
                    }
                }
            }
            static void Task2_13()
            {
                double[] Array1 = new double[10] { 1.4, 54, 25.3, -100, 2, -35.5, 505, -1, -23, -3453.4564 };
                double[] MaxAr = MaxArray(Array1);
                for (int i = 0; i < 10; i++)
                {
                    if (Array1[i] == MaxAr[0])
                        Array1[i] = i;
                }
                foreach (double x in Array1)
                    Console.WriteLine(x);
            }
            static void Task2_15()
            {
                double[] ArrayA = new double[10] { 1.4, 54, 25.3, -100, 2, -35.5, 505, -1, -23, -3453.4564 };
                double[] ArrayB = new double[5] { 1, 2, 3, 4, 5 };
                double[] ArrayC = new double[ArrayA.Length + ArrayB.Length];
                if (int.TryParse(Console.ReadLine(), out int K) & K >= 0 & K < (ArrayA.Length - 1))
                {
                    Console.WriteLine("\n");
                    for (int i = 0; i != K; i++)
                    {
                        ArrayC[i] = ArrayA[i];
                    }
                    for (int i = K; i != (K + ArrayB.Length); i++)
                    {
                        ArrayC[i] = ArrayB[i - K];
                    }
                    for (int i = K + ArrayB.Length; i != ArrayC.Length; i++)
                    {
                        ArrayC[i] = ArrayA[i - ArrayB.Length];
                    }
                    foreach (double x in ArrayC)
                    {
                        Console.WriteLine(x);
                    }
                }
            }
            static void Task3_1()
            {
                double[] ArrayA = new double[12] { 1.4, -54, -25.3, 1.4, -100, 2, 2, -35.5, 0, -1, 1.6 - 23, -3453.4564 };
                int[] ArrayInd = new int[1];
                int iMax = 0;
                double ArMax = ArrayA[0];
                int j = 0;
                for (int i = 0; i != ArrayA.Length; i++)
                {
                    if (ArrayA[i] > ArMax)
                    {
                        j = 0;
                        Array.Resize(ref ArrayInd, 1);
                        ArrayInd[j] = i;
                        ArMax = ArrayA[i];
                    }
                    else if (ArrayA[i] == ArMax)
                    {
                        j += 1;
                        Array.Resize(ref ArrayInd, ArrayInd.Length + 1);
                        ArrayInd[j] = i;
                    }
                }
                foreach (int x in ArrayInd)
                    Console.WriteLine(x);

            }
            static void Task3_5()
            {
                double[] ArrayA = new double[12] { 1.4, -54, -25.3, 1.4, -100, 2, 2, -35.5, 0, -1, 1.6, -3453.4564 };
                double[] ArrayNotSort = new double[0];
                int l = 0;
                for (int i = 0; i != ArrayA.Length; i++)
                {
                    if (i % 2 == 0)
                    {
                        Array.Resize(ref ArrayNotSort, ArrayNotSort.Length + 1);
                        ArrayNotSort[l] = ArrayA[i];
                        l++;
                    }
                }
                double temp;
                for (int i = 0; i != ArrayNotSort.Length - 1; i++)
                {
                    for (int j = i + 1; j != ArrayNotSort.Length; j++)
                    {
                        if (ArrayNotSort[i] > ArrayNotSort[j])
                        {
                            temp = ArrayNotSort[i];
                            ArrayNotSort[i] = ArrayNotSort[j];
                            ArrayNotSort[j] = temp;
                        }
                    }
                }
                l = 0;
                for (int i = 0; i != ArrayA.Length; i++)
                {
                    if (i % 2 == 0)
                    {

                        ArrayA[i] = ArrayNotSort[l];
                        l++;
                    }
                }
                foreach (double x in ArrayA)
                    Console.WriteLine(x);
            }
            static void Task3_8()
            {
                double[] ArrayA = new double[12] { 1.4, -54, -25.3, 1.4, -100, 2, 2, -35.5, 0, -1, 1.6, -3453.4564 };
                for (int i = 0; i != ArrayA.Length - 1; i++)
                {
                    if (ArrayA[i] < 0)
                    {
                        double amin = ArrayA[i];
                        int imin = i;
                        for (int j = i + 1; j < ArrayA.Length; j++)
                        {
                            if (ArrayA[j] < amin)
                            {
                                amin = ArrayA[j];
                                imin = j;
                            }
                        }
                        ArrayA[imin] = ArrayA[i];
                        ArrayA[i] = amin;
                    }
                }
                foreach (double x in ArrayA)
                    Console.WriteLine(x);
            }
            static void Task3_9()
            {
                double[] ArrayA = new double[12] { 1.4, -5, -25.3, 1.4, -100, 0, 2, 35.5, 100, 110, 1.6, -3453.4564 };
                int k = 1;
                int lenmin = 0;
                int lenmax = 0;
                for (int i = 0; i != ArrayA.Length - 1; i++)
                {
                    if (ArrayA[i] > ArrayA[i + 1])
                    {
                        k += 1;
                    }
                    else
                    {
                        lenmin = Math.Max(k, lenmin);
                        k = 1;
                    }
                }
                lenmin = Math.Max(k, lenmin);
                k = 1;
                for (int i = 0; i != ArrayA.Length - 1; i++)
                {
                    if (ArrayA[i] < ArrayA[i + 1])
                    {
                        k += 1;
                    }
                    else
                    {
                        lenmax = Math.Max(k, lenmax);
                        k = 1;
                    }
                }
                lenmax = Math.Max(k, lenmax);
                Console.WriteLine(Math.Max(lenmin, lenmax));
            }
            static void Task3_12()
            {
                double[] ArrayA = new double[12] { 1.4, -54, -25.3, 1.4, -100, 2, 2, -35.5, 0, -1, 1.6, -3453.4564 };
                int j = 0;
                double[] ArrayB = new double[12] { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 };
                for (int i = 0; i != ArrayA.Length; i++)
                {
                    if (ArrayA[i] >= 0)
                    {
                        ArrayB[j] = ArrayA[i];
                        j++;
                    }
                }
                int iStop = ArrayB.Length;
                for (int i = 0; i != ArrayB.Length; i++)
                {
                    if (ArrayB[i] < 0)
                    {
                        iStop = i;
                        break;
                    }
                }
                Array.Resize(ref ArrayB, iStop);
                foreach (double x in ArrayB)
                    Console.WriteLine(x);
            }
            static void Task3_13()
            {
                double[] ArrayA = new double[12] { 1.4, -54, -25.3, 1.4, -100, 2, 2, -35.5, 0, -1, 1.6, -3453.4564 };
                double[] ArrayB = new double[0];
                int l = 0;
                for (int i = 0; i != ArrayA.Length; i++)
                {
                    int k = 0;
                    for (int j = 0; j != i; j++)
                    {
                        if (ArrayA[j] == ArrayA[i])
                        {
                            k += 1;
                            break;
                        }
                    }
                    if (k == 0)
                    {
                        Array.Resize(ref ArrayB, ArrayB.Length + 1);
                        ArrayB[l] = ArrayA[i];
                        l++;
                        k = 0;
                    }
                }
                foreach (double x in ArrayB)
                    Console.WriteLine(x);

            }
            

            static void TaskAlg_11()
            {
                int[] Array1 = new int[10] { 1, 2, 3, 4, 5, 7, 8, 9, 10,11 };
                if (int.TryParse(Console.ReadLine(), out int P))
                {
                    if (P <= Array1[Array1.Length - 1] & P >= Array1[0])
                    {
                        if (Array1[0] == P)
                        {
                            Console.WriteLine($"Number found, index is 0");
                            return;
                        }
                        if (Array1[Array1.Length - 1] == P)
                        {
                            Console.WriteLine($"Number found, index is {Array1.Length - 1}");
                            return;
                        }
                        int  LeftGran= 0;
                        int RightGran = Array1.Length - 1;
                        int SrGran = (RightGran + LeftGran) / 2;
                        while (( RightGran-LeftGran) != 1)
                        {
                            SrGran = (RightGran + LeftGran) / 2;
                            if (Array1[SrGran] == P)
                            {
                                Console.WriteLine($"Number found, index is {SrGran}");
                                break;
                            }
                            if (Array1[SrGran] > P)
                            {
                                RightGran = SrGran;
                            }
                            else
                                LeftGran = SrGran;
                        }
                        if (Array1[SrGran] != P)
                        {
                            Console.WriteLine($"No number in massive");
                        }
                    }
                    else
                        Console.WriteLine($"No number in massive");
                }

            }        
            static void TaskAlg_12()
            {
                double[] ArrayA = new double[6] { -1, 3.5, 23, 7, -100, 3 };
                double[] ArrayB = new double[8] { 1.1, 34, -54, 1000, 345, -10056, 1, 34 };
                double[] ArrayC = new double[ArrayA.Length + ArrayB.Length];
                int j = 0;
                int k = 0;  
                int i = 0;                 

                    while (j != ArrayA.Length & k != ArrayB.Length)
                    {
                        ArrayC[i] = ArrayA[j];
                        i++;
                        j++;
                        ArrayC[i] = ArrayB[k];
                        k++;
                        i++;
                    }
                    for (int m=i; m!=ArrayC.Length;m++)
                    {
                        if (ArrayA.Length < ArrayB.Length)
                        {
                                ArrayC[m] = ArrayB[k];
                                k++;                            
                        }
                        else
                        {
                           
                                ArrayC[m] = ArrayA[j];
                                j++;
                        }
                    }
                

                foreach (double x in ArrayC)
                    Console.WriteLine(x);
            }
            static void TaskAlg_13()
            {
                double[] ArrayA = new double[6] { 100,55,24,0,-1.2,-33 };
                double[] ArrayB = new double[7] {123,122,121,65,0,-100,-123 };
                double[] ArrayC = new double[ArrayA.Length + ArrayB.Length];
                int i = 0;
                int j = 0;
                for (int k = 0; k != ArrayC.Length; k++)
                {
                    if (i < ArrayA.Length & j < ArrayB.Length)
                    {
                        if (ArrayA[i] > ArrayB[j])
                        {
                            ArrayC[k] = ArrayA[i];
                            i++;
                        }
                        else
                        {
                            ArrayC[k] = ArrayB[j];
                            j++;
                        }
                    }
                    else if (i >= ArrayA.Length)
                    {
                        ArrayC[k] = ArrayB[j];
                        j++;
                    }
                    else 
                    {
                        ArrayC[k] = ArrayA[i];
                        i++;
                    }
                }
                foreach (double x in ArrayC)
                    Console.WriteLine(x);
            }
            static void TaskAlg_14()
            {
                double[] ArrayA = new double[7] { -1, 3.5, 23, 7, -100, 3,4 };
                for (int i = 0; i != ArrayA.Length/2; i++)
                {
                    double temp = ArrayA[i];
                    ArrayA[i]=ArrayA[ArrayA.Length-1-i];
                    ArrayA[ArrayA.Length - 1 - i] = temp;
                }
                foreach (double x in ArrayA)
                    Console.WriteLine(x);
            }
            static void TaskAlg_15()
            {
                double[] ArrayA = new double[6] { -1, 3.5, 23, 7, -100, 3 };
                if (int.TryParse(Console.ReadLine(), out int P))
                {
                    
                    P=P%ArrayA.Length;
                    int Q = P;
                    double[] ArrayAdd = new double[P];
                    for (int i = 0; i != P; i++)
                    {
                        ArrayAdd[i] = ArrayA[ArrayA.Length -Q];
                        Q--;
                    }
                    for (int i = ArrayA.Length - 1; i != P-1; i--)
                    {
                        ArrayA[i] = ArrayA[i - P];
                    }
                    for (int i = 0; i != P; i++)
                    {
                        ArrayA[i] = ArrayAdd[i];
                    }
                    foreach (double x in ArrayA)
                        Console.WriteLine(x);
                }
            }
            
            TaskAlg_12();
  
            Console.ReadKey();
        }
    }
}
